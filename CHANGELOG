# CHANGELOG for EnvCloak

## *[0.3.0]* - xxxx-xx-xx
### Added
- **Information about versatility.**
- Added possibility to not specify output when encrypting single file (using original name with `.enc` suffix).
- Added `--preview` flag for encrypt and decrypt command.
- Introduced `SECURITY.md` policy with guidelines how to securely use this tool.
- Added guidelines for integrating with popular cloud KMS.

### Changed
- Code refactor to modularize logic.
- Increased randomness when generating salt by introducing `secure` package. (Thanks to @BavyaMittal)
- Applied module docstrings

## *[0.2.2]* - 2024-11-29
### Changed

- Fix critical error with `packaging` not declared in dependencies list.

## *[0.2.1]* & *[0.2.0]* - 2024-11-27
> First of Beta release
### Added
- `sha3` generation for encrypted files.
- `sha3` validation during decryption.
- Implement version check during runtime. (Thanks to @Ishan-Jadhav)
- Increased test coverage.
- `--recursive` option for encrypting and decrypting.
- Organized tests in modules.
- Refactored main logic for modularization.
- Removed "false-positive" vulnerabilities in `test`s suite.

## *[0.1.2]* - 2024-11-25
### Added
- `--debug` flag for more verbose output, useful for error checking. (Thanks to @Ishan-Jadhav)
- Expanded documentation, particularly on directory encryption and decryption. (Thanks to @SethLK)

### Changed
- Simplified and modularized the codebase, with notable improvements to `cli.py`.

## *[0.1.1]* - 2024-11-23
### Added
- `--version` flag to display the package version. (Thanks to @RobertoCorti)
- `--dry-run` flag to simulate actions without making changes.
- `--force` flag to allow overwriting existing files/directories.

## *[0.1.0]* - 2024-11-22
### Added
- Dependabot integration to monitor and manage package dependencies.
- A minimal pool of exceptions for improved error message formatting.

## *[0.0.2]* - 2024-11-21
### Added
- GitHub Actions workflow to automatically validate changes on push.

## *[0.0.1]* - 2024-11-21
### Initial Release
- Basic MVP with foundational functionality.
- Black code formatting enforced.
- Expanded test cases for core functionality.
